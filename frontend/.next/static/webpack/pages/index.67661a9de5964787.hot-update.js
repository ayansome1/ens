"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/api/blockchain/getDomains-api.ts":
/*!**********************************************!*\
  !*** ./src/api/blockchain/getDomains-api.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDomainsApi\": function() { return /* binding */ getDomainsApi; }\n/* harmony export */ });\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"./node_modules/alchemy-sdk/dist/esm/index.js\");\n\nconst API_KEY = \"ak-uT206i3YhKLvy59yozmo234bLg_cO\";\nconst ensAddress = \"0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85\";\nconst config = {\n    apiKey: API_KEY,\n    network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET\n};\nconst alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(config);\nconst getDomainsApi = async (owner)=>{\n    // Get all NFTs\n    const nfts = await alchemy.nft.getNftsForOwner(owner, {\n        contractAddresses: [\n            ensAddress\n        ]\n    });\n    // Print NFTs\n    console.log(nfts);\n    return nfts;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBpL2Jsb2NrY2hhaW4vZ2V0RG9tYWlucy1hcGkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0U7QUFFbEUsTUFBTUUsVUFBVUMsa0NBQXVDO0FBQ3ZELE1BQU1HLGFBQWFILDRDQUEyQztBQUU5RCxNQUFNSyxTQUFTO0lBQ2JDLFFBQVFQO0lBQ1JRLFNBQVNULDREQUFtQjtBQUM5QjtBQUNBLE1BQU1XLFVBQVUsSUFBSVosZ0RBQU9BLENBQUNRO0FBRXJCLE1BQU1LLGdCQUFnQixPQUMzQkMsUUFDK0I7SUFDL0IsZUFBZTtJQUNmLE1BQU1DLE9BQU8sTUFBTUgsUUFBUUksR0FBRyxDQUFDQyxlQUFlLENBQUNILE9BQU87UUFDcERJLG1CQUFtQjtZQUFDWjtTQUFXO0lBQ2pDO0lBQ0EsYUFBYTtJQUNiYSxRQUFRQyxHQUFHLENBQUNMO0lBRVosT0FBT0E7QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcGkvYmxvY2tjaGFpbi9nZXREb21haW5zLWFwaS50cz85ZGJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFsY2hlbXksIE5ldHdvcmssIE93bmVkTmZ0c1Jlc3BvbnNlIH0gZnJvbSAnYWxjaGVteS1zZGsnO1xuXG5jb25zdCBBUElfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQUxDSEVNWV9BUElfS0VZIGFzIHN0cmluZztcbmNvbnN0IGVuc0FkZHJlc3MgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19FTlNfQUREUkVTU19NQUlOTkVUIGFzIHN0cmluZztcblxuY29uc3QgY29uZmlnID0ge1xuICBhcGlLZXk6IEFQSV9LRVksXG4gIG5ldHdvcms6IE5ldHdvcmsuRVRIX01BSU5ORVQsXG59O1xuY29uc3QgYWxjaGVteSA9IG5ldyBBbGNoZW15KGNvbmZpZyk7XG5cbmV4cG9ydCBjb25zdCBnZXREb21haW5zQXBpID0gYXN5bmMgKFxuICBvd25lcjogc3RyaW5nXG4pOiBQcm9taXNlPE93bmVkTmZ0c1Jlc3BvbnNlPiA9PiB7XG4gIC8vIEdldCBhbGwgTkZUc1xuICBjb25zdCBuZnRzID0gYXdhaXQgYWxjaGVteS5uZnQuZ2V0TmZ0c0Zvck93bmVyKG93bmVyLCB7XG4gICAgY29udHJhY3RBZGRyZXNzZXM6IFtlbnNBZGRyZXNzXSwgLy8gVE9ETzogUmVwbGFjZSB3aXRoIGVuc0FkZHJlc3MgLSBAYXlhbnNvbWUxXG4gIH0pO1xuICAvLyBQcmludCBORlRzXG4gIGNvbnNvbGUubG9nKG5mdHMpO1xuXG4gIHJldHVybiBuZnRzO1xufTtcbiJdLCJuYW1lcyI6WyJBbGNoZW15IiwiTmV0d29yayIsIkFQSV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQUxDSEVNWV9BUElfS0VZIiwiZW5zQWRkcmVzcyIsIk5FWFRfUFVCTElDX0VOU19BRERSRVNTX01BSU5ORVQiLCJjb25maWciLCJhcGlLZXkiLCJuZXR3b3JrIiwiRVRIX01BSU5ORVQiLCJhbGNoZW15IiwiZ2V0RG9tYWluc0FwaSIsIm93bmVyIiwibmZ0cyIsIm5mdCIsImdldE5mdHNGb3JPd25lciIsImNvbnRyYWN0QWRkcmVzc2VzIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/api/blockchain/getDomains-api.ts\n"));

/***/ })

});